{"ast":null,"code":"var _jsxFileName = \"/Users/clayreimus/Documents/audiocast/github_api/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [avatarURL, setAvatarURL] = useState();\n  const [githubUsername, setGitHubUsername] = useState();\n  const [repoData, setRepoData] = useState();\n  const APIkey = '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';\n  const allModsURL = 'https://api.github.com/repos/roll20/roll20-api-scripts/git/trees/master';\n  const profileURL = 'https://api.github.com/users/Roll20';\n  const data = [{\n    name: 'Steve',\n    age: 27,\n    job: 'Sandwich Eater'\n  }, {\n    name: 'Gary',\n    age: 35,\n    job: 'Falafeler'\n  }, {\n    name: 'Greg',\n    age: 24,\n    job: 'Jelly Bean Juggler'\n  }, {\n    name: 'Jeb',\n    age: 39,\n    job: 'Burrito Racer'\n  }, {\n    name: 'Jeff',\n    age: 48,\n    job: 'Hot Dog Wrangler'\n  }]; // Fields to show in the table, and what object properties in the data they bind to\n\n  const fields = [{\n    name: 'name',\n    displayName: 'Name',\n    inputFilterable: true,\n    sortable: true\n  }, {\n    name: 'age',\n    displayName: 'Age',\n    inputFilterable: true,\n    exactFilterable: true,\n    sortable: true\n  }, {\n    name: 'job',\n    displayName: 'Occupation',\n    inputFilterable: true,\n    exactFilterable: true,\n    sortable: true\n  }];\n\n  async function repoDataURL() {\n    //Get repo data about all mods in github\n    await fetch(allModsURL, {\n      method: 'GET',\n      headers: {\n        Authorization: APIkey\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(36, result.tree);\n      const list = result.tree.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: item.url,\n          children: item.path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this));\n      setRepoData(list);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    fetch(profileURL, {\n      method: 'GET',\n      headers: {\n        Authorization: APIkey\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n      setAvatarURL(result.avatar_url);\n      setGitHubUsername(result.login);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App w-100 min-vh-100 justify-content-center align-items-center d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: avatarURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: githubUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: repoDataURL,\n            children: \"Show me the mod library!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), repoData]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"ughRx6OkjwgO0CIYz73CFaVZInU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/clayreimus/Documents/audiocast/github_api/src/App.js"],"names":["useEffect","useState","Card","Button","App","avatarURL","setAvatarURL","githubUsername","setGitHubUsername","repoData","setRepoData","APIkey","allModsURL","profileURL","data","name","age","job","fields","displayName","inputFilterable","sortable","exactFilterable","repoDataURL","fetch","method","headers","Authorization","then","res","json","result","console","log","tree","list","map","item","url","path","error","avatar_url","login","width"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport './App.css'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nfunction App() {\n  const [avatarURL, setAvatarURL] = useState()\n  const [githubUsername, setGitHubUsername] = useState()\n  const [repoData, setRepoData] = useState()\n  const APIkey = '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'\n  const allModsURL =\n    'https://api.github.com/repos/roll20/roll20-api-scripts/git/trees/master'\n  const profileURL = 'https://api.github.com/users/Roll20'\n\n  const data = [\n    { name: 'Steve', age: 27, job: 'Sandwich Eater' },\n    { name: 'Gary', age: 35, job: 'Falafeler' },\n    { name: 'Greg', age: 24, job: 'Jelly Bean Juggler' },\n    { name: 'Jeb', age: 39, job: 'Burrito Racer' },\n    { name: 'Jeff', age: 48, job: 'Hot Dog Wrangler' },\n  ]\n\n  // Fields to show in the table, and what object properties in the data they bind to\n  const fields = [\n    {\n      name: 'name',\n      displayName: 'Name',\n      inputFilterable: true,\n      sortable: true,\n    },\n    {\n      name: 'age',\n      displayName: 'Age',\n      inputFilterable: true,\n      exactFilterable: true,\n      sortable: true,\n    },\n    {\n      name: 'job',\n      displayName: 'Occupation',\n      inputFilterable: true,\n      exactFilterable: true,\n      sortable: true,\n    },\n  ]\n\n  async function repoDataURL() {\n    //Get repo data about all mods in github\n    await fetch(allModsURL, {\n      method: 'GET',\n      headers: {\n        Authorization: APIkey,\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(36, result.tree)\n          const list = result.tree.map((item) => (\n            <div className=\"text-center\">\n              <a target=\"_blank\" href={item.url}>\n                {item.path}\n              </a>\n            </div>\n          ))\n          setRepoData(list)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }\n\n  useEffect(() => {\n    fetch(profileURL, {\n      method: 'GET',\n      headers: {\n        Authorization: APIkey,\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          setAvatarURL(result.avatar_url)\n          setGitHubUsername(result.login)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n  return (\n    <>\n      <div className=\"App w-100 min-vh-100 justify-content-center align-items-center d-flex flex-column\">\n        <Card style={{ width: '18rem' }}>\n          <Card.Img variant=\"top\" src={avatarURL} />\n          <Card.Body>\n            <Card.Title>{githubUsername}</Card.Title>\n\n            <Button variant=\"primary\" onClick={repoDataURL}>\n              Show me the mod library!\n            </Button>\n          </Card.Body>\n        </Card>\n        {repoData}\n      </div>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}