{"ast":null,"code":"var _jsxFileName = \"/Users/clayreimus/Documents/audiocast/github_api/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [avatarURL, setAvatarURL] = useState();\n  const [githubUsername, setGitHubUsername] = useState();\n  const [repoData, setRepoData] = useState();\n  const APIkey = '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';\n  const allModsURL = 'https://api.github.com/repos/roll20/roll20-api-scripts/git/trees/master';\n\n  async function repoDataURL() {\n    //Get repo data about all mods in github\n    await fetch(allModsURL, {\n      method: 'GET',\n      headers: {\n        Authorization: APIkey\n      }\n    }).then(res => res.json()).then(result => {\n      console.log(36, result.tree);\n      const list = result.tree.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          href: item.url,\n          children: item.path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this));\n      setRepoData(list);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    fetch('https://api.github.com/users/Roll20').then(res => res.json()).then(result => {\n      console.log(result);\n      setAvatarURL(result.avatar_url);\n      setGitHubUsername(result.login);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App w-100 min-vh-100 justify-content-center align-items-center d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '18rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: avatarURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: githubUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: repoDataURL,\n          children: \"Show me the mod library!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), repoData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ughRx6OkjwgO0CIYz73CFaVZInU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/clayreimus/Documents/audiocast/github_api/src/App.js"],"names":["logo","useEffect","useState","Card","Button","App","avatarURL","setAvatarURL","githubUsername","setGitHubUsername","repoData","setRepoData","APIkey","allModsURL","repoDataURL","fetch","method","headers","Authorization","then","res","json","result","console","log","tree","list","map","item","url","path","error","avatar_url","login","width"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,EAA1C;AACA,QAAM,CAACM,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,EAApD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,EAAxC;AACA,QAAMU,MAAM,GAAG,0CAAf;AACA,QAAMC,UAAU,GACd,yEADF;;AAGA,iBAAeC,WAAf,GAA6B;AAC3B;AACA,UAAMC,KAAK,CAACF,UAAD,EAAa;AACtBG,MAAAA,MAAM,EAAE,KADc;AAEtBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEN;AADR;AAFa,KAAb,CAAL,CAMHO,IANG,CAMGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EANX,EAOHF,IAPG,CAQDG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ,EAAgBF,MAAM,CAACG,IAAvB;AACA,YAAMC,IAAI,GAAGJ,MAAM,CAACG,IAAP,CAAYE,GAAZ,CAAiBC,IAAD,iBAC3B;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAG,UAAA,MAAM,EAAC,QAAV;AAAmB,UAAA,IAAI,EAAEA,IAAI,CAACC,GAA9B;AAAA,oBACGD,IAAI,CAACE;AADR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADW,CAAb;AAOAnB,MAAAA,WAAW,CAACe,IAAD,CAAX;AACD,KAlBC,EAmBDK,KAAD,IAAW;AACTR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KArBC,CAAN;AAuBD;;AAED9B,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACGI,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAf,MAAAA,YAAY,CAACe,MAAM,CAACU,UAAR,CAAZ;AACAvB,MAAAA,iBAAiB,CAACa,MAAM,CAACW,KAAR,CAAjB;AACD,KAPL,EAQKF,KAAD,IAAW;AACTR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACD,KAVL;AAYD,GAbQ,EAaN,EAbM,CAAT;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,mFAAf;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,8BACE,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,KAAlB;AAAwB,QAAA,GAAG,EAAE5B;AAA7B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaE;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAEM,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGJ,QAXH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAhEQL,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg'\nimport { useEffect, useState } from 'react'\nimport './App.css'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nfunction App() {\n  const [avatarURL, setAvatarURL] = useState()\n  const [githubUsername, setGitHubUsername] = useState()\n  const [repoData, setRepoData] = useState()\n  const APIkey = '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'\n  const allModsURL =\n    'https://api.github.com/repos/roll20/roll20-api-scripts/git/trees/master'\n\n  async function repoDataURL() {\n    //Get repo data about all mods in github\n    await fetch(allModsURL, {\n      method: 'GET',\n      headers: {\n        Authorization: APIkey,\n      },\n    })\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(36, result.tree)\n          const list = result.tree.map((item) => (\n            <div className=\"text-center\">\n              <a target=\"_blank\" href={item.url}>\n                {item.path}\n              </a>\n            </div>\n          ))\n          setRepoData(list)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }\n\n  useEffect(() => {\n    fetch('https://api.github.com/users/Roll20')\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          setAvatarURL(result.avatar_url)\n          setGitHubUsername(result.login)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }, [])\n  return (\n    <div className=\"App w-100 min-vh-100 justify-content-center align-items-center d-flex flex-column\">\n      <Card style={{ width: '18rem' }}>\n        <Card.Img variant=\"top\" src={avatarURL} />\n        <Card.Body>\n          <Card.Title>{githubUsername}</Card.Title>\n\n          <Button variant=\"primary\" onClick={repoDataURL}>\n            Show me the mod library!\n          </Button>\n        </Card.Body>\n      </Card>\n      {repoData}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}