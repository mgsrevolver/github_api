{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultProps = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _core = require(\"@material-ui/core\");\n\nvar MComponents = _interopRequireWildcard(require(\"./components\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _colorManipulator = require(\"@material-ui/core/styles/colorManipulator\");\n\nvar OverlayLoading = function OverlayLoading(props) {\n  return _react[\"default\"].createElement(\"div\", {\n    style: {\n      display: 'table',\n      width: '100%',\n      height: '100%',\n      backgroundColor: (0, _colorManipulator.fade)(props.theme.palette.background.paper, 0.7)\n    }\n  }, _react[\"default\"].createElement(\"div\", {\n    style: {\n      display: 'table-cell',\n      width: '100%',\n      height: '100%',\n      verticalAlign: 'middle',\n      textAlign: 'center'\n    }\n  }, _react[\"default\"].createElement(_core.CircularProgress, null)));\n};\n\nOverlayLoading.propTypes = {\n  theme: _propTypes[\"default\"].any\n};\nvar defaultProps = {\n  actions: [],\n  classes: {},\n  columns: [],\n  components: {\n    Action: MComponents.MTableAction,\n    Actions: MComponents.MTableActions,\n    Body: MComponents.MTableBody,\n    Cell: MComponents.MTableCell,\n    Container: _core.Paper,\n    EditField: MComponents.MTableEditField,\n    EditRow: MComponents.MTableEditRow,\n    FilterRow: MComponents.MTableFilterRow,\n    Groupbar: MComponents.MTableGroupbar,\n    GroupRow: MComponents.MTableGroupRow,\n    Header: MComponents.MTableHeader,\n    OverlayLoading: OverlayLoading,\n    Pagination: _core.TablePagination,\n    Row: MComponents.MTableBodyRow,\n    Toolbar: MComponents.MTableToolbar\n  },\n  data: [],\n  icons: {\n    /* eslint-disable react/display-name */\n    Add: function Add(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"add_box\");\n    },\n    Check: function Check(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"check\");\n    },\n    Clear: function Clear(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"clear\");\n    },\n    Delete: function Delete(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"delete_outline\");\n    },\n    DetailPanel: function DetailPanel(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"chevron_right\");\n    },\n    Edit: function Edit(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"edit\");\n    },\n    Export: function Export(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"save_alt\");\n    },\n    Filter: function Filter(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"filter_list\");\n    },\n    FirstPage: function FirstPage(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"first_page\");\n    },\n    LastPage: function LastPage(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"last_page\");\n    },\n    NextPage: function NextPage(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"chevron_right\");\n    },\n    PreviousPage: function PreviousPage(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"chevron_left\");\n    },\n    ResetSearch: function ResetSearch(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"clear\");\n    },\n    Search: function Search(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"search\");\n    },\n    SortArrow: function SortArrow(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"arrow_upward\");\n    },\n    ThirdStateCheck: function ThirdStateCheck(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"remove\");\n    },\n    ViewColumn: function ViewColumn(props) {\n      return _react[\"default\"].createElement(_core.Icon, props, \"view_column\");\n    }\n    /* eslint-enable react/display-name */\n\n  },\n  isLoading: false,\n  title: 'Table Title',\n  options: {\n    actionsColumnIndex: 0,\n    addRowPosition: 'last',\n    columnsButton: false,\n    detailPanelType: 'multiple',\n    debounceInterval: 200,\n    doubleHorizontalScroll: false,\n    emptyRowsWhenPaging: true,\n    exportAllData: false,\n    exportButton: false,\n    exportDelimiter: ',',\n    filtering: false,\n    header: true,\n    loadingType: 'overlay',\n    paging: true,\n    pageSize: 5,\n    pageSizeOptions: [5, 10, 20],\n    paginationType: 'normal',\n    showEmptyDataSourceMessage: true,\n    showSelectAllCheckbox: true,\n    search: true,\n    showTitle: true,\n    toolbarButtonAlignment: 'right',\n    searchFieldAlignment: 'right',\n    searchFieldStyle: {},\n    selection: false,\n    sorting: true,\n    toolbar: true,\n    defaultExpanded: false\n  },\n  localization: {\n    grouping: {\n      groupedBy: 'Grouped By:',\n      placeholder: 'Drag headers here to group by'\n    },\n    pagination: {\n      labelDisplayedRows: '{from}-{to} of {count}',\n      labelRowsPerPage: 'Rows per page:',\n      labelRowsSelect: 'rows'\n    },\n    toolbar: {},\n    header: {},\n    body: {\n      filterRow: {},\n      editRow: {\n        saveTooltip: 'Save',\n        cancelTooltip: 'Cancel',\n        deleteText: 'Are you sure delete this row?'\n      },\n      addTooltip: 'Add',\n      deleteTooltip: 'Delete',\n      editTooltip: 'Edit'\n    }\n  }\n};\nexports.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"script"}